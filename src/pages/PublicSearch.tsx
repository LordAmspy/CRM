import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Search, Database } from 'lucide-react';
import { useCandidates } from '../context/CandidateContext';

export function PublicSearch() {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [hasSearched, setHasSearched] = useState(false);
  const navigate = useNavigate();
  const { findCandidateByPhone } = useCandidates();

  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value.replace(/\D/g, '');
    if (value.length <= 12) {
      setPhoneNumber(value);
      setHasSearched(false);
    }
  };

  const searchResult = hasSearched ? findCandidateByPhone(phoneNumber) : null;

  const handleSearch = () => {
    if (phoneNumber.length === 12) {
      setHasSearched(true);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col items-center py-12 px-4 sm:px-6 lg:px-8">
      <div className="cursor-pointer" onClick={() => navigate('/login')}>
        <div className="flex items-center justify-center space-x-2 mb-8">
          <Database className="h-10 w-10 text-blue-600" />
          <span className="text-2xl font-bold text-gray-900">CRM Search</span>
        </div>
      </div>

      <div className="w-full max-w-md">
        <div className="bg-white p-6 shadow rounded-lg">
          <div className="relative">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <Search className="h-5 w-5 text-gray-400" />
            </div>
            <input
              type="text"
              value={phoneNumber}
              onChange={handlePhoneChange}
              className="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              placeholder="Enter 12-digit phone number..."
              maxLength={12}
            />
          </div>

          {phoneNumber.length === 12 && (
            <button
              onClick={handleSearch}
              className="mt-4 w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Search
            </button>
          )}

          {hasSearched && (
            <div className="mt-6 bg-gray-50 p-4 rounded-md">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Search Result</h3>
              {searchResult ? (
                <div className="space-y-3">
                  <div>
                    <span className="text-sm font-medium text-gray-500">Name:</span>
                    <span className="ml-2 text-sm text-gray-900">
                      {searchResult.firstName} {searchResult.lastName}
                    </span>
                  </div>
                  <div>
                    <span className="text-sm font-medium text-gray-500">Phone:</span>
                    <span className="ml-2 text-sm text-gray-900">{searchResult.phoneNumber}</span>
                  </div>
                  <div>
                    <span className="text-sm font-medium text-gray-500">Generated By:</span>
                    <span className="ml-2 text-sm text-gray-900">
                      {searchResult.generatedBy} ({searchResult.affiliateId})
                    </span>
                  </div>
                </div>
              ) : (
                <p className="text-sm text-gray-500">No candidate found with this phone number.</p>
              )}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}